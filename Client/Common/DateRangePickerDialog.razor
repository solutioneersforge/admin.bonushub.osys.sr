@inject ISnackbar SnackbarService
@inject IDialogService DialogService
@inject NavigationManager NavigationManager

<MudDialog>
    <DialogContent>
        <MudTabs Style="@Styles.StandardTabsStyle">
            <MudTabPanel Text="@($"From {FilterStartDate:dd MMM yyyy}")" Style="@Styles.StandardTabsStyle">
                <MudDatePicker Color="MudBlazor.Color.Default"  Variant="Variant.Text" OpenTo="OpenTo.Date" Margin="Margin.Dense" DateChanged="OnStartDateChanged" Editable ImmediateText Required TitleDateFormat="dd MMM yyyy" Label="From" ShowWeekNumbers Square Date="@FilterStartDate" Style="@Styles.StandardDateRangePickerStyle" ShowToolbar="false" DateFormat="dd MMM yyyy" FirstDayOfWeek="DayOfWeek.Monday" PickerVariant="PickerVariant.Static" />
            </MudTabPanel>
            <MudTabPanel Text="@($"Until {FilterEndDate:dd MMM yyyy}")" Style="@Styles.StandardTabsStyle">
                <MudDatePicker Color="MudBlazor.Color.Default"  Variant="Variant.Text" OpenTo="OpenTo.Date" Margin="Margin.Dense" DateChanged="OnEndDateChanged" Editable ImmediateText Required TitleDateFormat="dd MMM yyyy" Label="Until" ShowWeekNumbers Square Date="@FilterEndDate" Style="@Styles.StandardDateRangePickerStyle" ShowToolbar="false" DateFormat="dd MMM yyyy" FirstDayOfWeek="DayOfWeek.Monday" PickerVariant="PickerVariant.Static" />
            </MudTabPanel>
        </MudTabs>
    </DialogContent>
    <DialogActions>
        <MudIconButton Size="MudBlazor.Size.Small" Icon="@Icons.Material.Filled.Done" Color="MudBlazor.Color.Info" Style="@Styles.StandardButtonNoColorStyle" Variant="MudBlazor.Variant.Filled" OnClick="Done" />
        <MudIconButton Size="MudBlazor.Size.Small" Icon="@Icons.Material.Filled.Cancel" Color="MudBlazor.Color.Error" Style="@Styles.StandardButtonNoColorStyle" Variant="MudBlazor.Variant.Filled" OnClick="Cancel" />
    </DialogActions>
</MudDialog>

@code
{
    [CascadingParameter] MudDialogInstance MudDialog { get; set; } = null!;

    [Parameter]
    public DateTime? FilterStartDate { get; set; }

    [Parameter]
    public DateTime? FilterEndDate { get; set; }

    int ActiveTabIndex = 0;

    void OnStartDateChanged(DateTime? dt) => FilterStartDate = dt;
    void OnEndDateChanged(DateTime? dt) => FilterEndDate = dt;

    void Done() => MudDialog.Close(DialogResult.Ok(new DateTime?[] { FilterStartDate, FilterEndDate }));
    void Cancel() => MudDialog.Cancel();
}

