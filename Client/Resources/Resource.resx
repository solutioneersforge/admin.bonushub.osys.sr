<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Adds" xml:space="preserve">
    <value>Adds</value>
  </data>
  <data name="Adds per slot" xml:space="preserve">
    <value>Adds per slot</value>
  </data>
  <data name="Amount" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="AppBarTitle" xml:space="preserve">
    <value>Admin panel</value>
  </data>
  <data name="Are you sure you want to update the adds-range for slot?" xml:space="preserve">
    <value>Are you sure you want to update the adds-range for slot?</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Cancelling..." xml:space="preserve">
    <value>Cancelling...</value>
  </data>
  <data name="Center" xml:space="preserve">
    <value>Center</value>
  </data>
  <data name="Changelogs" xml:space="preserve">
    <value>Changelogs</value>
  </data>
  <data name="dark" xml:space="preserve">
    <value>dark</value>
  </data>
  <data name="Default image" xml:space="preserve">
    <value>Default image</value>
  </data>
  <data name="Done" xml:space="preserve">
    <value>Done</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Font" xml:space="preserve">
    <value>Font</value>
  </data>
  <data name="Font size" xml:space="preserve">
    <value>Font size</value>
  </data>
  <data name="Good afternoon" xml:space="preserve">
    <value>Good afternoon</value>
  </data>
  <data name="Good evening" xml:space="preserve">
    <value>Good evening</value>
  </data>
  <data name="Good morning" xml:space="preserve">
    <value>Good morning</value>
  </data>
  <data name="Hide Menu" xml:space="preserve">
    <value>Hide Menu</value>
  </data>
  <data name="Id" xml:space="preserve">
    <value>Id</value>
  </data>
  <data name="Image background color" xml:space="preserve">
    <value>Image background color</value>
  </data>
  <data name="Image maximum filesize" xml:space="preserve">
    <value>Image max. filesize</value>
  </data>
  <data name="Image maximum height" xml:space="preserve">
    <value>Image max. height</value>
  </data>
  <data name="Image maximum width" xml:space="preserve">
    <value>Image max. width</value>
  </data>
  <data name="Image minimum height" xml:space="preserve">
    <value>Image min. height</value>
  </data>
  <data name="Image minimum width" xml:space="preserve">
    <value>Image min. width </value>
  </data>
  <data name="Image settings" xml:space="preserve">
    <value>Image settings</value>
  </data>
  <data name="Image with the following extensions is allowed:" xml:space="preserve">
    <value>Image with the following extensions is allowed:</value>
  </data>
  <data name="Item" xml:space="preserve">
    <value>Item</value>
  </data>
  <data name="Left" xml:space="preserve">
    <value>Left</value>
  </data>
  <data name="light" xml:space="preserve">
    <value>light</value>
  </data>
  <data name="Loading settings..." xml:space="preserve">
    <value>Loading settings...</value>
  </data>
  <data name="Logged in as" xml:space="preserve">
    <value>Logged in as</value>
  </data>
  <data name="Maximum" xml:space="preserve">
    <value>Max. adds</value>
  </data>
  <data name="Minimum" xml:space="preserve">
    <value>Min. adds</value>
  </data>
  <data name="mode" xml:space="preserve">
    <value>mode</value>
  </data>
  <data name="New value" xml:space="preserve">
    <value>New value</value>
  </data>
  <data name="No image has been selected!" xml:space="preserve">
    <value>No image has been selected!</value>
  </data>
  <data name="No ranks are available" xml:space="preserve">
    <value>No ranks are available because the maximum adds are reached for slot {0}.</value>
  </data>
  <data name="No, cancel!" xml:space="preserve">
    <value>No, cancel!</value>
  </data>
  <data name="Not published" xml:space="preserve">
    <value>Not published</value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="Old value" xml:space="preserve">
    <value>Old value</value>
  </data>
  <data name="Operation" xml:space="preserve">
    <value>Operation</value>
  </data>
  <data name="Operation cancelled. Changes were not saved." xml:space="preserve">
    <value>Operation cancelled. Changes were not saved.</value>
  </data>
  <data name="Please provide a text for the add." xml:space="preserve">
    <value>Please provide a text for the add.</value>
  </data>
  <data name="Please select a slot to place the image in." xml:space="preserve">
    <value>Please select a slot to place the image in.</value>
  </data>
  <data name="Published" xml:space="preserve">
    <value>Published</value>
  </data>
  <data name="Rank" xml:space="preserve">
    <value>Rank</value>
  </data>
  <data name="Record Id." xml:space="preserve">
    <value>Record Id.</value>
  </data>
  <data name="Redirect URL" xml:space="preserve">
    <value>Redirect URL</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="Right" xml:space="preserve">
    <value>Right</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Slot" xml:space="preserve">
    <value>Slot</value>
  </data>
  <data name="Switch to" xml:space="preserve">
    <value>Switch to</value>
  </data>
  <data name="Table" xml:space="preserve">
    <value>Table</value>
  </data>
  <data name="Text" xml:space="preserve">
    <value>Text</value>
  </data>
  <data name="The default image should be .png file." xml:space="preserve">
    <value>The default image should be .png file.</value>
  </data>
  <data name="The file size of the image exceeds the limit of" xml:space="preserve">
    <value>The file size of the image exceeds the limit of</value>
  </data>
  <data name="The redirect URL is missing!" xml:space="preserve">
    <value>The redirect URL is missing!</value>
  </data>
  <data name="The redirect URL must start with" xml:space="preserve">
    <value>The redirect URL must start with http:// or https://</value>
  </data>
  <data name="Top" xml:space="preserve">
    <value>Top</value>
  </data>
  <data name="Upload an image" xml:space="preserve">
    <value>Upload</value>
  </data>
  <data name="View image" xml:space="preserve">
    <value>View image</value>
  </data>
  <data name="Vip" xml:space="preserve">
    <value>Vip</value>
  </data>
  <data name="When" xml:space="preserve">
    <value>When</value>
  </data>
  <data name="Who" xml:space="preserve">
    <value>Who</value>
  </data>
  <data name="Yes, go ahead!" xml:space="preserve">
    <value>Yes, go ahead!</value>
  </data>
</root>